// Code generated by cudago. Edit at your own risk.
package cudago

import (
	"unsafe"

	"github.com/InternatBlackhole/cudago/cuda"
)

// here just to force usage of unsafe package
var __hello_useless_var__ unsafe.Pointer = nil

const (
	KeyHello = "hello"
)

type helloArgs struct {
}

/*var (
    helloArgs = helloArgs{}

)*/

func Hello(grid, block cuda.Dim3) error {
	err := autoloadLib_hello()
	if err != nil {
		return err
	}
	kern, err := getKernel("hello", "Hello")
	if err != nil {
		return err
	}

	return kern.Launch(grid, block)
}

func HelloEx(grid, block cuda.Dim3, sharedMem uint64, stream *cuda.Stream) error {
	err := autoloadLib_hello()
	if err != nil {
		return err
	}
	kern, err := getKernel("hello", "Hello")
	if err != nil {
		return err
	}

	return kern.LaunchEx(grid, block, sharedMem, stream)
}

var loaded_hello = false

var pathToCompile_hello = "./hello.cu"

func autoloadLib_hello() error {
	var code []byte
	if loaded_hello {
		return nil
	}
	code, err := compileFile(pathToCompile_hello)
	if err != nil {
		return err
	}
	err = InitLibrary([]byte(code), "hello")
	if err != nil {
		return err
	}
	loaded_hello = true
	return nil
}
